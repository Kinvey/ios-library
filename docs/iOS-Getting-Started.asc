Kinvey iOS Library
==================
Brian Wilson <brian@kinvey.com>
1.0, 12/07/2011

Getting Started
---------------

=== Downloading the Library ===

Step one is to grab a copy of the Kinvey iOS library.

Once you unzip the library you should see two folders:

.Folders in Archive

. KinveyKit.framework, this includes all Kinvey Services.

. Airship, this includes the libraries required for Urban Airship Push integration.

=== Create a New Project ===

To get started we need a new project in XCode.  The library works with all project kinds, but to keep things simple we'll use a "Single View" project.

Click File->New->New Project...

image:images/new-project.jpg["Creating a new project",width=200,link="images/new-project.jpg"]

Then select 'Single View Application' under iOS->Application when prompted to select a template and select 'Next' to continue.

image:images/single-view.jpg["Selecting Single View", width=200, link="images/single-view.jpg"]

On the 'Choose options for your new project:' dialog enter the name for this project (enter 'Kinvey Sample App' if unsure), enter your company's name, leave class prefix blank, set the Device family to 'iPhone' and finally uncheck all three checkboxes.

image:images/options.jpg["Selecting Options", width=200, link="images/options.jpg"]

Click 'Next', select the location to store the project and hit create.

NOTE: You can select other values on this screen and the library will be compatable, however if you use a Class Prefix, code snippets in this guide may need to be modified to work. 

Once your new project is complete, you're ready for installing the library.

=== Installing ===

Installing the KinveyKit library involves just a couple of steps:

* Drag KinveyKit.framework into your project

image:images/adding-to-project.jpg["Adding library to project",width=200,link="images/adding-to-project.jpg"]

* Add Dependancy to Targets

image:images/adding-to-targets.jpg["Adding library to targets",width=200,link="images/adding-to-targets.jpg"]


* Linker Options

Due to a bug in the XCode linker, we also need to specify one final option to make sure the library is completly loaded.

Under your target's 'Build Settings' page, search for 'Other Linker Flags', and add '-ObjC' as an additional linker flag.

image:images/linker-objc.jpg["Adding -lObjC to linker flags",width=200,link="images/linker-objc.jpg"]



* Adding Required Frameworks

** Adding the Urban Airship integration library

Using the Finder copy the 'Airship' directory to your project directory ('Airship' should be located in the same places as the .xcodeprj file).

image:images/pasting-airship.jpg["Pasting the Airship directory",width=200,link="images/pasting-airship.jpg"]

Under your target's 'Build Phases' configuration tab, expand 'Link Binary With Libraries' section and click the '+' button to add the Urban Airship integration library.

In the dialog select 'Use Other...', then select Airship->libUAirship-1.1.1.a and select 'Open'

image:images/add-other.jpg["Adding Another Library",width=200,link="images/add-other.jpg"]

** Adding Frameworks

Under your target's 'Build Phases' configuration tab, expand 'Link Binary With Libraries' section and click the '+' button to add a new framework.  Select the following libraries and click 'Add'

*** CFNetwork.framework
*** CoreGraphics.framework
*** Foundation.framework
*** MobileCoreServices.framework
*** Security.framework
*** SystemConfiguration.framework
*** UIKit.framework
*** libz.dylib
*** libsqlite3.dylib
*** StoreKit.framework
*** CoreTelephony.framework

Once you're back on the main 'Link Binary With Libraries' screen, mark CoreTelephony.framework as 'optional'.

Your libraries should now look like:

image:images/libraries.jpg["Libraries required for linking",width=200,link="images/libraries.jpg"]

=== Enabling Kinvey ===

To enable Kinvey you just need to add two lines to your Application Delegate, but for our first application we're going to go one step further and make our first call to Kinvey.

At the top of your Application Delegate 'AppDelegate.m' add the following line near the
top of the file, just under the import statement for the ViewController.h:

[source, objc]
----
#import <KinveyKit/KinveyKit.h>
----

Next, we'll update 'application:didFinishLaunchingWithOptions:' to talk to Kinvey.  Update the method so it looks like, only using your App Key and App Secret from the Kinvey console.

[source,objc]
----
- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
    self.window = [[[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]] autorelease];
    // Override point for customization after application launch.
    self.viewController = [[[ViewController alloc] initWithNibName:@"ViewController" bundle:nil] autorelease];
    self.window.rootViewController = self.viewController;
    [self.window makeKeyAndVisible];

    // Initialize Kinvey Library with App Key and App Secret
    [[KCSClient sharedClient] initializeKinveyServiceForAppKey:@"<App Key>" withAppSecret:@"<App Secret>" usingOptions:nil];
    
    // Ping Kinvey
    [KCSPing pingKinveyWithBlock:^(KCSPingResult *result) {
        NSString *title;
        
        if (result.pingWasSuccessful){
            title = [NSString stringWithString:@"Kinvey Ping Success :)"];
        } else {
            title = [NSString stringWithString:@"Kinvey Ping Failed :("];
        }
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle: title
                                                        message: [result description]
                                                       delegate: nil
                                              cancelButtonTitle: @"OK"
                                              otherButtonTitles: nil];
        [alert show];
        [alert release];
    }];
    
    return YES;
}
----

=== Testing Kinvey ===

Ok!  We're ready to test, go ahead and click the "Run" button in XCode and watch as you ping Kinvey!

==== Running ====
image:images/run.jpg["Running the App",width=200,link="images/run.jpg"]

==== Success! ====
image:images/ping.png["Success!",width=200,link="images/ping.png"]


////
This is where we do our magic
////
++++
<script type="text/javascript" src="js/kinvey-img.js"></script>
<script type="text/javascript">
/*<![CDATA[*/
fixImageLinks();
/*]]>*/
</script>
++++
